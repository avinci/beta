jobs:

  ##########################
  # begin check_queue job
  ##########################
  - name: check_prod_queue
    type: runSh
    steps:
      - IN: check_queue_trigger
      - IN: config_repo
        switch: off
      - IN: prod_api_params
      - TASK:
        - script: ./IN/config_repo/gitRepo/checkQueue.sh prod
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('
      - NOTIFY: slack_prod

  ##########################
  # end check_queue job
  ##########################

  - name: patch_mktg
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: mktg_img
        switch: off
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/patchImage.sh mktg 374168611083.dkr.ecr.us-east-1.amazonaws.com rel_prod

  - name: build_reqProc_x86_64_Ubuntu_16_04
    type: runSh
    steps:
      - IN: reqProc_repo
      - IN: reqExec_x86_64_Ubuntu_14_04_pack
        switch: off
      - IN: reqExec_x86_64_Ubuntu_16_04_pack
        switch: off
      - IN: package_reqExec_x86_64_CentOS_7
        switch: off
      - IN: package_reqExec_x86_64_macOS_10_12
        switch: off
      - IN: package_reqExec_aarch64_Ubuntu_16_04
        switch: off
      - IN: execTemplates_repo
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - IN: microbase_img
      - TASK:
        - script: ./IN/reqProc_repo/gitRepo/build.sh x86_64 Ubuntu_16.04 drydock reqproc

  - name: build_reqProc_x86_64_macOS_10_12
    type: runSh
    runtime:
      architecture: x86_64
      os: macOS_10.12
      container: false
    steps:
      - IN: reqProc_repo
      - IN: reqExec_x86_64_Ubuntu_14_04_pack
        switch: off
      - IN: reqExec_x86_64_Ubuntu_16_04_pack
        switch: off
      - IN: package_reqExec_x86_64_CentOS_7
        switch: off
      - IN: package_reqExec_x86_64_macOS_10_12
        switch: off
      - IN: package_reqExec_aarch64_Ubuntu_16_04
        switch: off
      - IN: execTemplates_repo
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - IN: microbase_img
      - TASK:
        - script: ./IN/reqProc_repo/gitRepo/build.sh x86_64 macOS_10.12 drydock m10reqproc

  - name: build_reqProc_aarch64_Ubuntu_16_04
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: reqProc_repo
      - IN: reqExec_x86_64_Ubuntu_14_04_pack
        switch: off
      - IN: reqExec_x86_64_Ubuntu_16_04_pack
        switch: off
      - IN: package_reqExec_x86_64_CentOS_7
        switch: off
      - IN: package_reqExec_x86_64_macOS_10_12
        switch: off
      - IN: package_reqExec_aarch64_Ubuntu_16_04
        switch: off
      - IN: execTemplates_repo
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - IN: aarch64_microbase_img
      - TASK:
        - script: ./IN/reqProc_repo/gitRepo/build.sh aarch64 Ubuntu_16.04 drydockaarch64 reqproc

  # TODO: move this job to x86_64 CentOS_7
  - name: package_reqExec_x86_64_CentOS_7
    type: runSh
    steps:
      - IN: microbase_img
      - IN: config_repo
        switch: off
      - IN: reqExec_repo
      - IN: aws_v2_bits_access_cli
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildAndPushReqExecArtifacts.sh x86_64 CentOS_7 s3://shippable-artifacts

  - name: package_reqExec_x86_64_macOS_10_12
    type: runSh
    runtime:
      architecture: x86_64
      os: macOS_10.12
      container: false
    steps:
      - IN: microbase_img
      - IN: config_repo
        switch: off
      - IN: reqExec_repo
      - IN: aws_v2_bits_access_cli
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildAndPushReqExecArtifacts.sh x86_64 macOS_10.12 s3://shippable-artifacts

  - name: package_reqExec_aarch64_Ubuntu_16_04
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: aarch64_microbase_img
      - IN: config_repo
        switch: off
      - IN: reqExec_repo
      - IN: aws_v2_bits_access_cli
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildAndPushReqExecArtifacts.sh aarch64 Ubuntu_16.04 s3://shippable-artifacts

  #  ###########################################
  #  # deploy rc release to rc environment
  #  ###########################################
  - name: deploy_rc
    type: runSh
    on_start:
      - NOTIFY: slack_rc
    steps:
      - IN: config_repo
        switch: off
      - IN: baseami_patch
      - IN: aws_rc_pem
      - IN: aws_rc_swarm
      - IN: api_img
      - IN: www_img
      - IN: nexec_img
      - IN: mktg_img
      - IN: micro_img
      - IN: admiral_img
      - TASK:
        - script: ./IN/config_repo/gitRepo/deployRc.sh
    on_success:
      - script: echo 'succeeded'
      - NOTIFY: slack_rc
    on_failure:
      - script: echo 'failed'
      - NOTIFY: slack_rc

  ###########################################
  # release production from default manifest
  ###########################################

  - name: rel_prod
    type: release
    steps:
      - IN: ship_ver
        switch: off
#      - IN: bvt-v2
#        switch: off
      - IN: deploy_rc  #temp instead of bvt-v2
        switch: off
      - TASK: managed
        bump: patch

  ###########################################
  # BEGIN run infra provisioning
  ###########################################

  - name: rc_saas_infra_prov
    type: runSh
    steps:
      - IN: aws_rc_pem
      - IN: aws_v2_rc_access
      - IN: infra_repo
        switch: off
      - TASK:
        - script: IN/infra_repo/gitRepo/provision.sh rc saas
    on_success:
      - script: echo 'SUCCESS!'
    on_failure:
      - script: echo 'FAILURE!'
    always:
      - script: /build/IN/infra_repo/gitRepo/archiveProvisionState.sh rc saas

  - name: prod_saas_infra_prov
    type: runSh
    steps:
      - IN: aws_prod_pem
      - IN: aws_v2_prod_access
      - IN: infra_repo
        switch: off
      - TASK:
        - script: IN/infra_repo/gitRepo/provision.sh prod saas
    on_success:
      - script: echo 'SUCCESS!'
    on_failure:
      - script: echo 'FAILURE!'
    always:
      - script: /build/IN/infra_repo/gitRepo/archiveProvisionState.sh prod saas

  ###########################################
  # BEGIN run infra provisioning
  ###########################################

  ###########################################
  # BEGIN Build Acceptance Tests
  ###########################################
  - name: bvt-v2
    type: runSh
    steps:
      - IN: bvt_v2_repo
      - IN: bvt_v2_params
      - IN: bvt_v2_ghc_owner_ssh_key
      - IN: bvt_v2_ghc_collab_ssh_key
#      - IN: deploy_rc
      - TASK:
        - script: IN/bvt_v2_repo/gitRepo/test.sh bvt_v2_params
    on_success:
      - NOTIFY: slack_rc
    on_failure:
      - NOTIFY: slack_rc
  ###########################################
  # END Build Acceptance Tests
  ###########################################

  ###########################################
  # START Drydockaarch64 image builds
  ###########################################

  - name: build_aarch64_u16
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: config_repo
        switch: off
      - IN: aarch64_u16_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh aarch64_u16 drydockaarch64 u16
      - OUT: aarch64_u16_img

  - name: build_aarch64_u16pyt
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: config_repo
        switch: off
      - IN: aarch64_u16_img
      - IN: aarch64_u16pyt_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh aarch64_u16pyt drydockaarch64 u16pyt
      - OUT: aarch64_u16pyt_img

  - name: build_aarch64_u16cpp
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: config_repo
        switch: off
      - IN: aarch64_u16_img
      - IN: aarch64_u16cpp_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh aarch64_u16cpp drydockaarch64 u16cpp
      - OUT: aarch64_u16cpp_img

  - name: build_aarch64_microbase
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: config_repo
        switch: off
      - IN: aarch64_u16_img
      - IN: aarch64_microbase_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh aarch64_microbase drydockaarch64 microbase
      - OUT: aarch64_microbase_img

  ###########################################
  # END Drydockaarch64 image builds
  ###########################################
  ###########################################
  # START TAG & PUSH image/repos/amis
  ###########################################

  - name: tag_reqProc
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: rel_prod
      - TASK:
          script:
            - ./IN/config_repo/gitRepo/tagAndPushImage.sh reqproc drydock
            - ./IN/config_repo/gitRepo/tagAndPushImage.sh m10reqproc drydock
            - echo "This should run ./IN/config_repo/gitRepo/tagAndPushImage.sh w16reqproc drydock"
            - ./IN/config_repo/gitRepo/tagAndPushImage.sh reqproc drydockaarch64

  - name: tag_reqExec
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: rel_prod
      - IN: aws_v2_bits_access_cli
      - TASK:
          script:
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 Ubuntu_16.04 s3://shippable-artifacts
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 Ubuntu_14.04 s3://shippable-artifacts
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 CentOS_7 s3://shippable-artifacts
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 macOS_10.12 s3://shippable-artifacts
            - echo "This should run ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 WindowsServer_2016 s3://shippable-artifacts"
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh aarch64 Ubuntu_16.04 s3://shippable-artifacts

  ### Tagging drydockaarch64 Shippable services
  - name: tag_push_aarch64_dry
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: aarch64_gh_ssh  # TODO: Remove this after avi_gh_ssh is added to dry-dock-aarch64 organisation
        switch: off
      - IN: aarch64_microbase_img
        switch: off
      - IN: aarch64_microbase_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh aarch64_dry

  ### Tagging aarch64 u16 services
  - name: tag_push_aarch64_u16
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: aarch64_gh_ssh  # TODO: Remove this after avi_gh_ssh is added to dry-dock-aarch64 organisation
        switch: off
      - IN: aarch64_u16_img
        switch: off
      - IN: aarch64_u16_repo
        switch: off
      - IN: aarch64_u16pyt_img
        switch: off
      - IN: aarch64_u16pyt_repo
        switch: off
      - IN: aarch64_u16cpp_img
        switch: off
      - IN: aarch64_u16cpp_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh aarch64_u16

  ###########################################
  # END TAG & PUSH image/repos/amis
  ###########################################
